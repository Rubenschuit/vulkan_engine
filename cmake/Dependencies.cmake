# Locate and configure third-party dependencies
# - Vulkan SDK
# - GLFW (optionally via FetchContent)
# - TinyObjLoader
# - stb_image

# Vulkan SDK
if (DEFINED VULKAN_SDK_PATH)
	set(Vulkan_INCLUDE_DIRS "${VULKAN_SDK_PATH}/Include")
	if (APPLE)
		if (EXISTS "${VULKAN_SDK_PATH}/lib")
			set(Vulkan_LIBRARIES "${VULKAN_SDK_PATH}/lib")
		elseif (EXISTS "${VULKAN_SDK_PATH}/lib/macOS")
			set(Vulkan_LIBRARIES "${VULKAN_SDK_PATH}/lib/macOS")
		endif()
	else()
		set(Vulkan_LIBRARIES "${VULKAN_SDK_PATH}/Lib")
	endif()
	set(Vulkan_FOUND TRUE)
else() # Find Vulkan SDK from system
	find_package(Vulkan REQUIRED)
	if (TARGET Vulkan::Vulkan)
		get_target_property(_vk_interface_inc Vulkan::Vulkan INTERFACE_INCLUDE_DIRECTORIES)
		set(Vulkan_INCLUDE_DIRS ${_vk_interface_inc})
		set(Vulkan_LIBRARIES Vulkan::Vulkan)
		set(Vulkan_FOUND TRUE)
	endif()
endif()
if (NOT Vulkan_FOUND)
	message(FATAL_ERROR "Could not locate Vulkan SDK. Set VULKAN_SDK_PATH or install system Vulkan.")
else()
	message(STATUS "Vulkan include: ${Vulkan_INCLUDE_DIRS}")
endif()

# GLFW
set(GLFW_LIB glfw)
if (DEFINED GLFW_PATH)
	message(STATUS "Using GLFW path specified in .env: ${GLFW_PATH}")
	set(GLFW_INCLUDE_DIRS "${GLFW_PATH}/include")
	if (MSVC)
		set(GLFW_EXTRA_LIB_DIR "${GLFW_PATH}/lib-vc2019")
	elseif (CMAKE_GENERATOR STREQUAL "MinGW Makefiles")
		set(GLFW_EXTRA_LIB_DIR "${GLFW_PATH}/lib-mingw-w64")
	endif()
elseif (VE_FETCH_GLFW)
	include(FetchContent)
		FetchContent_Declare(glfw
			GIT_REPOSITORY https://github.com/glfw/glfw.git
			GIT_TAG 3.3.9
		)
	set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
	set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
	set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
	FetchContent_MakeAvailable(glfw)
	set(GLFW_INCLUDE_DIRS ${glfw_SOURCE_DIR}/include)
	set(GLFW_LIB glfw)
else()
	find_package(glfw3 3.3 QUIET)
	if (glfw3_FOUND)
		set(GLFW_INCLUDE_DIRS "")
		set(GLFW_LIB glfw)
		message(STATUS "Found system GLFW3")
	else()
		message(FATAL_ERROR "GLFW not found. Set GLFW_PATH, enable VE_FETCH_GLFW, or install glfw3.")
	endif()
endif()
if (GLFW_EXTRA_LIB_DIR)
	link_directories(${GLFW_EXTRA_LIB_DIR})
endif()

# TinyObj
if (NOT TINYOBJ_PATH)
	message(STATUS "TINYOBJ_PATH not specified in .env.cmake, using external/tinyobjloader")
	set(TINYOBJ_PATH external/tinyobjloader)
endif()

# stb_image (header-only)
if (NOT STB_PATH)
	message(STATUS "STB_PATH not specified in .env.cmake, using external/stb")
	set(STB_PATH external/stb)
endif()
